Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  VpcCidrBlock:
    Description: VPC CIDR block
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  PublicSubnetCidrBlock:
    Description: Public subnet CIDR block
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  PrivateSubnetCidrBlock:
    Description: Public subnet CIDR block
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Description: (DO NOT CHANGE)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    AllowedValues:
      - /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Resources:
  MyCloudVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      Tags:
        - Key: Name
          Value: MyCloud-VPC

  MyCloudPublicSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyCloudVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCidrBlock
      Tags:
        - Key: Name
          Value: MyCloud-Public-SN

  MyCloudPrivateSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyCloudVPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnetCidrBlock
      Tags:
        - Key: Name
          Value: MyCloud-Private-SN

  MyCloudIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyCloud-IGW

  MyCloudIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyCloudIGW
      VpcId: !Ref MyCloudVPC

  MyCloudNATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  MyCloudNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt MyCloudNATGatewayEIP.AllocationId
      SubnetId: !Ref MyCloudPublicSN

  MyCloudPublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyCloudVPC
      Tags:
        - Key: Name
          Value: MyCloud-Public-RT

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: MyCloudIGWAttachment
    Properties:
      RouteTableId: !Ref MyCloudPublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyCloudIGW

  MyCloudPrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyCloudVPC
      Tags:
        - Key: Name
          Value: MyCloud-Private-RT

  MyCloudPublicSNRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyCloudPublicRT
      SubnetId: !Ref MyCloudPublicSN

  MyCloudPrivateSNRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyCloudPrivateRT
      SubnetId: !Ref MyCloudPrivateSN

  MyCloudSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      VpcId: !Ref MyCloudVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  MyCloudPublicEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: MyCloud-Public-EC2
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref MyCloudPublicSN
          GroupSet:
            - !Ref MyCloudSecurityGroup
          AssociatePublicIpAddress: true

  MyCloudPrivateEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: MyCloud-Private-EC2
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref MyCloudPrivateSN
          GroupSet:
            - !Ref MyCloudSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          (
          echo "qwe123"
          echo "qwe123"
          ) | passwd --stdin root
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          service sshd restart
